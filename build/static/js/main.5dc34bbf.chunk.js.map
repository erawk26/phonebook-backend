{"version":3,"sources":["Filter.js","TelephoneInput.js","PersonForm.js","Persons.js","StatusMessage.js","services/persons.js","App.js","reportWebVitals.js","index.js"],"names":["Filter","handleToUpdate","onChange","evt","target","value","TelephoneInput","id","placeholder","formattedVal","sliceStr","replace","slice","a","b","c","cc","mainPart","countryCode","len","length","formatPhoneNumber","Form","handleToSubmit","telephoneValue","onSubmit","type","Persons","persons","handleToRemove","map","p","name","number","onClick","StatusMessage","msg","styles","status","padding","borderRadius","fontWeight","margin","error","border","color","success","statusStyle","className","style","baseUrl","svcs","getAll","axios","get","then","res","data","create","newObject","post","update","put","remove","delete","App","useState","setPersons","results","setResults","newStr","setNewStr","errorMsg","setErrorMsg","successMsg","setSuccessMsg","telephoneInputVal","setTelephoneInputVal","handleFilterUpdate","useCallback","str","handleInputUpdate","filterResults","arr","sNumber","sName","toLowerCase","filter","indexOf","useEffect","personService","response","catch","console","log","setTimeout","PersonForm","preventDefault","evtName","elements","person","find","window","confirm","evtNum","upsertedPerson","updated","sort","newPerson","reset","created","concat","removed","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5dc34bbf.chunk.js","sourcesContent":["const Filter = ({ handleToUpdate }) => {\n  const handleInput = (evt) => {\n    handleToUpdate(evt.target.value);\n  };\n  return <input onChange={handleInput}></input>;\n};\nexport default Filter;\n","function formatPhoneNumber(value) {\n  // clean the input for any non-digit values.\n  value = value.replace(/[^\\d]/g, \"\");\n  const sliceStr = \"          \" + value.slice(-12);\n  const a = sliceStr.slice(-4);\n  const b = sliceStr.slice(-7, -4);\n  const c = sliceStr.slice(-10, -7);\n  const cc = sliceStr.slice(-12, -10).replace(/[\\s]/g, \"\");\n  const mainPart = `(${c})${b}-${a}`;\n  const countryCode = `+${cc}`;\n  const len = value.length;\n  return len > 10 ? countryCode + mainPart : len === 10 ? mainPart : value;\n}\nexport default function TelephoneInput({ id, value, handleToUpdate }) {\n  //   const [value, setValue] = useState(\"\");\n  const handleChange = (evt) => {\n    const formattedVal = formatPhoneNumber(evt.target.value);\n    if (evt.target.value.length <= 16) {\n      handleToUpdate(formattedVal);\n    }\n  };\n  return (\n    <input\n      placeholder=\"+1(978)654-3210\"\n      value={value}\n      id={id}\n      onChange={handleChange}\n    />\n  );\n}\n","import React from \"react\";\nimport TelephoneInput from './TelephoneInput'\nconst Form = ({ handleToSubmit, handleToUpdate, telephoneValue}) => (\n  <form onSubmit={handleToSubmit}>\n    <div>\n      name: <input id=\"name\" />\n    </div>\n    <div>\n      number: <TelephoneInput value={telephoneValue} handleToUpdate={handleToUpdate} id=\"number\"/>\n    </div>\n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n  </form>\n);\nexport default Form;\n","import React from \"react\";\nconst Persons = ({ persons, handleToRemove }) =>\n  persons.map((p) => (\n    <div key={p.id} id={\"person--\" + p.id}>\n      {p.name}\n      {p.number ? \": \" + p.number : \"\"}\n      <button onClick={()=>handleToRemove(p)}>delete</button>\n    </div>\n  ));\nexport default Persons;\n","const StatusMessage = ({ msg, type = \"error\" }) => {\n  if (!msg) {\n    return null;\n  }\n  const styles = {\n    status: {\n      padding: \"10px 20px\",\n      borderRadius: \"4px\",\n      fontWeight: \"bold\",\n      margin: \"20px 5px\",\n    },\n    error: { border: \"1px solid red\", color: \"red\" },\n    success: { border: \"1px solid green\", color: \"green\" },\n  };\n  const statusStyle = { ...styles[type], ...styles.status };\n  return (\n    <div className={`status-msg ${type}`} style={statusStyle}>\n      {msg}\n    </div>\n  );\n};\nexport default StatusMessage;\n","import axios from \"axios\";\nconst baseUrl = \"/api/persons\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((res) => res.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((res) => res.data);\n};\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then((res) => res);\n};\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then((res) => res.data);\n};\n\nconst svcs = { getAll, create, update, remove };\nexport default svcs;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport \"./App.css\";\nimport Filter from \"./Filter\";\nimport PersonForm from \"./PersonForm\";\nimport Persons from \"./Persons\";\nimport StatusMessage from \"./StatusMessage\";\n\nimport personService from \"./services/persons\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [results, setResults] = useState(persons);\n  const [newStr, setNewStr] = useState(\"\");\n  const [errorMsg, setErrorMsg] = useState(null);\n  const [successMsg, setSuccessMsg] = useState(null);\n  const [telephoneInputVal, setTelephoneInputVal] = useState(\"\");\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    const evtName = evt.target.elements.name.value;\n    if (evtName) {\n      const person = persons.find(\n        (p) => p.name.toLowerCase() === evtName.toLowerCase()\n      );\n      ///\n      if (person) {\n        if (\n          window.confirm(\n            `${person.name} is already in the phonebook. Do you want to update the phone number?`\n          )\n        ) {\n          const evtNum = evt.target.elements.number.value;\n          const upsertedPerson = {\n            ...person,\n            name: evtName,\n            number: evtNum.length ? evtNum : person.number,\n          };\n          personService\n            .update(person.id, upsertedPerson)\n            .then((response) => {\n              console.log({ updated: response });\n              setSuccessMsg(\n                `${response.name}'s information was successfully to updated.`\n              );\n              setTimeout(() => {\n                setSuccessMsg(null);\n              }, 5000);\n              setPersons(\n                persons.map((p) =>\n                  p.name.toLowerCase() !== evtName.toLowerCase() ? p : response\n                )\n              );\n            })\n            .catch((error) => {\n              setErrorMsg(\n                `We were unable to update ${upsertedPerson.name} on the server.`\n              );\n              console.log({ error });\n              setTimeout(() => {\n                setErrorMsg(null);\n              }, 5000);\n              // setPersons(persons.filter(p => p.id !== upsertedPerson.id))\n            });\n        }\n      } else {\n        const newId = ++persons.map((p) => p.id).sort((a, b) => b - a)[0];\n        const newPerson = {\n          name: evtName,\n          number: evt.target.elements.number.value,\n        };\n        personService\n          .create(newPerson)\n          .then((response) => {\n            evt.target.reset();\n            setTelephoneInputVal(\"\");\n            console.log({ created: response });\n            setSuccessMsg(\n              `${response.name} was successfully to added to the phonebook.`\n            );\n            setTimeout(() => {\n              setSuccessMsg(null);\n            }, 5000);\n            setPersons(persons.concat(response));\n          })\n          .catch((error) => {\n            setErrorMsg(\n              `We were unable to add ${newPerson.name} to the server. ${error.response.data.error}.`\n            );\n            console.log({ error: error.response.data.error });\n            setTimeout(() => {\n              setErrorMsg(null);\n            }, 5000);\n            setPersons(persons.filter((p) => p.id !== newPerson.id));\n          });\n      }\n    }\n  };\n  const handleRemove = (person) => {\n    if (window.confirm(\"Do you really want to remove?\")) {\n      personService\n        .remove(person.id)\n        .then((response, b, c) => {\n          console.log({ removed: person, response, b, c });\n          setSuccessMsg(`${person.name} was successfully deleted.`);\n          setTimeout(() => {\n            setSuccessMsg(null);\n          }, 5000);\n          setPersons(persons.filter((p) => p.id !== person.id));\n        })\n        .catch((error) => {\n          setErrorMsg(\n            `We were unable to delete ${person.name} from the server. ${error.response.data.error}.`\n          );\n          console.log({ error: error.response.data.error });\n          setTimeout(() => {\n            setErrorMsg(null);\n          }, 5000);\n        });\n    }\n  };\n  const handleFilterUpdate = useCallback((str) => {\n    setNewStr(str);\n  }, []);\n  const handleInputUpdate = useCallback((str) => {\n    setTelephoneInputVal(str);\n  }, []);\n  const filterResults = useCallback((str, arr) => {\n    if (str.length) {\n      const sNumber = str.replace(/\\D/g, \"\");\n      const sName = str.toLowerCase();\n      const a = sNumber.length\n        ? arr.filter((p) => {\n            const pNumber = p.number.replace(/\\D/g, \"\");\n            return pNumber.indexOf(sNumber) !== -1;\n          })\n        : [];\n      const b = arr.filter((p) => {\n        const pName = p.name.toLowerCase();\n        return pName.indexOf(sName) !== -1;\n      });\n      arr = [...a, ...b];\n    }\n    return arr;\n  }, []);\n  const onMounted = () => {\n    personService\n      .getAll()\n      .then((response) => {\n        setPersons(response);\n      })\n      .catch((error) => {\n        setErrorMsg(\n          `We were unable to fetch the records from the server. ${\n            error.response ? error.response.data.error : \"\"\n          }`\n        );\n        console.log({ error });\n        setTimeout(() => {\n          setErrorMsg(null);\n        }, 5000);\n      });\n  };\n  useEffect(onMounted, []);\n  useEffect(\n    () => setResults(filterResults(newStr, persons)),\n    [newStr, persons, filterResults]\n  );\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Filter handleToUpdate={handleFilterUpdate} />\n\n      <StatusMessage\n        msg={errorMsg ? errorMsg : successMsg}\n        type={errorMsg ? \"error\" : \"success\"}\n      />\n\n      <h3>Add a new</h3>\n      <PersonForm\n        telephoneValue={telephoneInputVal}\n        handleToUpdate={handleInputUpdate}\n        handleToSubmit={handleSubmit}\n      />\n\n      <h3>Numbers</h3>\n\n      <Persons persons={results} handleToRemove={handleRemove} />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}